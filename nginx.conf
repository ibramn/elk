events {
    worker_connections 1024;
}

http {
    upstream kibana {
        server kibana:5601;
    }

    upstream elasticsearch {
        server elasticsearch:9200;
    }

    upstream apm-server {
        server apm-server:8200;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;

    server {
        listen 80;
        server_name elogs.aldrees.com;
        
        # Redirect HTTP to HTTPS
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name elogs.aldrees.com;

        # SSL Configuration (you'll need to add your SSL certificates)
        ssl_certificate /etc/nginx/ssl/elogs.aldrees.com.crt;
        ssl_certificate_key /etc/nginx/ssl/elogs.aldrees.com.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Kibana - Main application
        location / {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://kibana;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for Kibana
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Elasticsearch API (optional - you might want to restrict this)
        location /elasticsearch/ {
            limit_req zone=api burst=10 nodelay;
            
            rewrite ^/elasticsearch/(.*) /$1 break;
            proxy_pass http://elasticsearch;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Basic auth for Elasticsearch access
            auth_basic "Elasticsearch Access";
            auth_basic_user_file /etc/nginx/.htpasswd;
        }

        # APM Server endpoint
        location /apm/ {
            limit_req zone=api burst=50 nodelay;
            
            rewrite ^/apm/(.*) /$1 break;
            proxy_pass http://apm-server;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}
